# https://hub.docker.com/r/awinterstein/habitica-client
# https://github.com/awinterstein/habitica
lzc-sdk-version: '0.1'
name: Habitica
package: shiina.lzcapp.habitica
version: 5.32.4
application:
  routes:
    - /=http://client.shiina.lzcapp.habitica.lzcapp:80
    - /api=http://server.shiina.lzcapp.habitica.lzcapp:3000
  subdomain: habitica
  ingress:
    - protocol: tcp
      port: 8080
      service: client
    - protocol: tcp
      port: 3000
      service: server
services:
  server:
    image: registry.lazycat.cloud/u12914963/awinterstein/habitica-server:9f874a7701fde313
    ports:
      - 3000
    environment:
      - NODE_DB_URI=mongodb://mongo.shiina.lzcapp.habitica.lzcapp/habitica
      - BASE_URL=http://habitica.shiina.lzcapp.habitica.lzcapp
      - INVITE_ONLY=false
      - EMAIL_SERVER_URL=mail.example.com
      - EMAIL_SERVER_PORT=587
      - EMAIL_SERVER_AUTH_USER=mail_user
      - EMAIL_SERVER_AUTH_PASSWORD=mail_password
    depends_on:
      - mongo
  client:
    image: registry.lazycat.cloud/u12914963/awinterstein/habitica-client:9e7a31154d08cd4b
    ports:
      - 80
    depends_on:
      - server
  mongo:
    image: registry.lazycat.cloud/u12914963/library/mongo:02425a4d2150ff04
    # command: ["--replSet", "rs", "--bind_ip_all", "--port", "27017"]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate() }" | mongosh --port 27017 --quiet
      interval: 10s
      timeout: 30s
      retries: 30
    binds:
      - /lzcapp/var/habitica/db:/data/db
      - /lzcapp/var/habitica/dbconf:/data/configdb